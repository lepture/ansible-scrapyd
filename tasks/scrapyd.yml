---

- name: Ensure scrapyd user exists
  user: name={{scrapyd_user}}

- name: Ensure scrapyd directories exists
  file: state=directory path={{scrapyd_home}} owner={{scrapyd_user}}

# Try to create virtualenv only if it doesn't exist.
# This way we can re-run the playbook without errors.
- name: Check existince of scrapyd virtualenv
  stat: path={{scrapyd_home}}/env
  register: scrapyd_has_virtualenv
  sudo: yes
  sudo_user: "{{scrapyd_user}}"

- name: Create virtualenv for scrapyd using chosen Python
  when: scrapyd_has_virtualenv.stat.exists == False
  shell: virtualenv --python={{scrapyd_python}} {{scrapyd_home}}/env
  sudo: yes
  sudo_user: "{{scrapyd_user}}"

- name: Install Scrapyd
  pip: name=scrapyd version={{scrapyd_version}} virtualenv={{scrapyd_home}}/env
  sudo: yes
  sudo_user: "{{scrapyd_user}}"

- name: Install extensions
  pip: name={{item}} virtualenv={{scrapyd_home}}/env
  with_items: scrapyd_extensions

- name: Configure scrapy local settings
  template: src=local_settings.py.j2 dest={{scrapyd_home}}/local_settings.py owner={{scrapyd_user}}
  when: scrapyd_scrapy_settings

- name: Configure Scrapyd
  template: src=scrapyd.conf.j2 dest={{scrapyd_home}}/scrapyd.conf owner={{scrapyd_user}}
  notify: [scrapyd restart]

- name: Configure Supervisor
  template: src=supervisor.conf.j2 dest={{supervisor_incdir}}/scrapyd.conf

- name: Configure Nginx
  template: src=nginx.conf.j2 dest={{nginx_dir|default('/etc/nginx')}}/sites-enabled/scrapyd.conf
  notify: [nginx reload]
  when: nginx_enabled
